<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<p>使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試).</p>
<p>個人倉儲:<a href="https://github.com/s40723240/wcm2021">https://github.com/s40723240/wcm2021</a></p>
<h1>WEEK</h1>
<p><a href="https://s40723240.github.io/wcm2021/content/WEEK1-9.html">week1-9</a></p>
<p><a href="https://s40723240.github.io/wcm2021/content/WEEK10-18.html">week10-18</a></p>
<h2>WEEK1-9</h2>
<p><span style="color: #ff0000;"><strong>week1</strong></span></p>
<p>敘述網際內容管理課程所需要的相關資料</p>
<p><span>(電腦輔助設計室第三磁區上課時使用純 IPv6 網路協定上線, 在 Python 3.8.5 可直接執行連結到 IPv4 網站的程式 (因為 Python 會自動使用 Windows 系統中所設定的 Proxy), 但在 Python 3.9.1 環境則必須明確宣告所使用的 IPv6 代理主機 (見以下註解說明, 因為至今 Python 3.9 仍無法如 3.8 自動透過 Windows 系統代理主機執行程式)</span></p>
<p><strong><span style="color: #ff0000;">week2</span></strong></p>
<p>說明kmolab基本概念</p>
<p><span>建立 kmol_hybrid 隨身程式系統</span></p>
<p><span>利用 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a><span><span> </span>建立個人倉儲與網站</span></span></p>
<p><span><span>說明與 cmsimde 編輯及轉靜態網頁有關的認知</span></span></p>
<p><span><span>說明 topic0 執行動機以及自選組員後所衍生相關資料擷取問題的因應及處理</span></span></p>
<p><span style="color: #ff0000;"><strong>week3</strong></span></p>
<p>敘述 <span>cms.bat</span><span> </span>- 讓使用者執行動態網站用的批次檔案.</p>
<p><span>       acp.bat</span><span> </span>- 若使用者已經將倉儲設為 ssh 連線, 且提供遠端與近端的認證模式, 則可以在執行此批次指令之後加上提交字串, 即可執行 git add ., git commit -m "提交訊息", 以及 git push 等三個指令.</p>
<p><span style="color: #ff0000;"><strong>week5</strong></span></p>
<p><span style="color: #000000;"><strong>ssh執行</strong></span></p>
<ol>
<li>請登入 Github 並且選擇帳號右下方 Settings - SSH and GPG keys 備用</li>
<li>在 start_ipv6.bat 加入<span> </span><span>set GIT_SSH=%Disk%:\putty\plink.exe</span></li>
<li>開啟 Putty 目錄中的 puttygen.exe, 以滑鼠點擊 Generate 後, 讓滑鼠在上方空白處隨意移動, 即可建立 key, 利用滑鼠選擇 key 區域中的文字資料, 並複製到 SciTE 編輯區, 存為  id_rsa 檔, 並將此內容貼至 Github SSH key 欄位中後儲存.</li>
<li>接下來在上一步驟中 puttygen.exe 視窗下方, 選擇<span> </span><span>Save private key</span><span> </span>後, 將 key 存為 my_key.ppk 或"學號.ppk"備用.</li>
<li>接下來則需要在 putty.exe 中建立一個 session, 用於以 ssh 協定連線到 github.com, 而 session 名稱可以自行命名, 但是必須與倉儲 .git 目錄中 config 的連線 url session 名稱對應.</li>
<li>當利用 putty.exe 設定連線 session 時必須注意是否使用 Proxy, 以及 SSH 中的 Auth 是否對應到前面所存檔的 .ppk private key 位置.</li>
<li>一旦 Github session 設定完成, 可以從 [HKEY_CURRENT_USER\SOFTWARE\SimonTatham] 將 registry 設定匯出存為 y:\my_github.reg, 並在 start_ipv6.bat 中以  regedit.exe /S y:\my_github.reg 將設定匯入.</li>
</ol>
<h2>WEEK10-18</h2>